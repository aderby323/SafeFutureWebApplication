@model List<SafeFutureWebApplication.Repository.Models.Recipient>


<div class="container">
    <h1>Generate Reports</h1>

</div>

<section class="container">
    <p>
        For this part, we will need to sit down with Chris
        and see the specific reports he would like to generate.

    </p>


    <fieldset>
        <legend>Option One</legend>



        <p>
            We could use a grouping of buttons here, like "Report by Household Size"
            or "Report by Zipcode". This could be effective, but if your requirements
            change over the years for your reports then this style won't do you much
            good. Effective, but not future-proof.

        </p>




        @Html.ActionLink("Report by Household Size", "Reports", "Admin", null, new { @class = "btn btn-success m-2" })
        @Html.ActionLink("Report by Zipcode", "Reports", "Admin", null, new { @class = "btn btn-success m-2" })

    </fieldset>

    <hr style="border-width:5px; color:black" />


    <fieldset>
        <legend>Option Two</legend>

        <p>
            Another possibility would be to use checkboxes to select which fields you would
            like downloaded for the reports. For example, you could check the zipcode, household size,
            and email boxes and you would receive an excel sheet with those data elements. This would 
            be an effective way to future-proof your report generating capabilities.

        </p>

        <br /><br />
        <input type="checkbox" id="zip" name="zip" value="zip">
        <label for="zip">Zipcode</label>

        <input type="checkbox" id="email" name="email" value="email">
        <label for="email">Email</label>

        <input type="checkbox" id="householdSize" name="householdSize" value="householdSize">
        <label for="householdSize">Household Size</label>

        <input type="checkbox" id="name" name="name" value="name">
        <label for="name">Name</label>
        <br /><br />

        @Html.ActionLink("Generate Report", "Reports", "Admin", null, new { @class = "btn btn-success m-2" })



    </fieldset>

    <hr style="border-width:5px; color:black" />

    <fieldset>
        <legend>Option Three</legend>
        <p>
            This is an option if you don't always want to download the data each time you want to view it. This could likely
            be combined with the second option so that you can see the fields which would be downloaded before
            doing so.
        </p>




        @if (Model.Count <= 0)
        {
            <div class="alert alert-info" role="alert">
                No recipients found.
            </div>
        }
        <div>
            <!--Change this-->
            <form asp-action="Index" method="get">
                <div class="input-group mb-0">
                    <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentSearch"]" placeholder="Search recipients">
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary" type="submit"><i class="fas fa-search"></i></button>
                    </div>
                </div>
            </form>
        </div>

        @if (Model.Count > 0)
        {
            <table>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Zip Code</th>
                    <th>Household Size</th>
                    <th>Email</th>
                    <th>Products Distributed</th>
                </tr>
                @foreach (var x in Model)
                {
                <tr>
                    <td>@x.FirstName</td>
                    <td>@x.LastName</td>
                    <td>@x.ZipCode</td>
                    <td>@x.HouseholdSize</td>
                    <td>@x.Email</td>

                </tr>
                }





            </table>
        }


    </fieldset>



    @Html.ActionLink("Go Back", "Index", "Admin", null, new { @class = "btn btn-success m-2" })


</section>



